def main(ctx):

  stages = [
    linux('amd64'),
    linux('arm64'),
    linux('arm'),
    # windows('1903'),
    # windows('1809'),
  ]

  # after = manifest() + gitter()

  # for b in before:
  #   for s in stages:
  #     s['depends_on'].append(b['name'])

  # for s in stages:
  #   for a in after:
  #     a['depends_on'].append(s['name'])

  # return before + stages + after
  return stages


def linux(arch):
  return {
    'kind': 'pipeline',
    'type': 'docker',
    'name': 'linux-%s' % arch,
    'platform': {
      'os': 'linux',
      'arch': arch,
    },
    'steps': [
      {
        'name': 'build-push',
        'image': 'golang:1.12',
        'pull': 'always',
        'environment': {
          'CGO_ENABLED': '0'
        },
        'commands': [
          'go build -v -ldflags "-X main.version=${DRONE_COMMIT_SHA:0:8}" -a -tags netgo -o release/linux/%s/drone-gitlab-releases' % arch
        ],
        'when': {
          'event': {
            'exclude': [
              'tag'
            ]
          }
        }
      },
      {
        'name': 'build-tag',
        'image': 'golang:1.12',
        'pull': 'always',
        'environment': {
          'CGO_ENABLED': '0'
        },
        'commands': [
          'go build -v -ldflags "-X main.version=${DRONE_TAG##v}" -a -tags netgo -o release/linux/%s/drone-gitlab-releases' % arch
        ],
        'when': {
          'event': [
            'tag'
          ]
        }
      },
      {
        'name': 'executable',
        'image': 'golang:1.12',
        'pull': 'always',
        'commands': [
          './release/linux/%s/drone-gitlab-releases --help' % arch
        ]
      },
      {
        'name': 'dryrun',
        'image': 'plugins/docker',
        'pull': 'always',
        'settings': {
          'dry_run': True,
          'tags': 'linux-%s' % arch,
          'dockerfile': 'docker/Dockerfile.linux.%s' % arch,
          'repo': 'plugins/github-release',
          'username': {
            'from_secret': 'docker_username'
          },
          'password': {
            'from_secret': 'docker_password'
          }
        },
        'when': {
          'event': [
            'pull_request'
          ]
        }
      },
      {
        'name': 'publish',
        'image': 'plugins/docker',
        'pull': 'always',
        'settings': {
          'auto_tag': True,
          'auto_tag_suffix': 'linux-%s' % arch,
          'dockerfile': 'docker/Dockerfile.linux.%s' % arch,
          'repo': 'plugins/github-release',
          'username': {
            'from_secret': 'docker_username'
          },
          'password': {
            'from_secret': 'docker_password'
          }
        },
        'when': {
          'event': {
            'exclude': [
              'pull_request'
            ]
          }
        }
      }
    ],
    'depends_on': [],
    'trigger': {
      'ref': [
        'refs/heads/master',
        'refs/tags/**',
        'refs/pull/**'
      ]
    }
  }
